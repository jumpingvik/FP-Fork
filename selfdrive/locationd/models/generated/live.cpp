#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_7420092385227711648) {
   out_7420092385227711648[0] = 0;
   out_7420092385227711648[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_7420092385227711648[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_7420092385227711648[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_7420092385227711648[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_7420092385227711648[5] = -sin(in_vec[1]);
   out_7420092385227711648[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_7420092385227711648[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_7420092385227711648[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_7420092385227711648[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_7420092385227711648[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_7420092385227711648[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_7420092385227711648[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_7420092385227711648[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_7420092385227711648[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_7420092385227711648[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_7420092385227711648[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_7420092385227711648[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_7384372108169230752) {
   out_7384372108169230752[0] = delta_x[0] + nom_x[0];
   out_7384372108169230752[1] = delta_x[1] + nom_x[1];
   out_7384372108169230752[2] = delta_x[2] + nom_x[2];
   out_7384372108169230752[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_7384372108169230752[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_7384372108169230752[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_7384372108169230752[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_7384372108169230752[7] = delta_x[6] + nom_x[7];
   out_7384372108169230752[8] = delta_x[7] + nom_x[8];
   out_7384372108169230752[9] = delta_x[8] + nom_x[9];
   out_7384372108169230752[10] = delta_x[9] + nom_x[10];
   out_7384372108169230752[11] = delta_x[10] + nom_x[11];
   out_7384372108169230752[12] = delta_x[11] + nom_x[12];
   out_7384372108169230752[13] = delta_x[12] + nom_x[13];
   out_7384372108169230752[14] = delta_x[13] + nom_x[14];
   out_7384372108169230752[15] = delta_x[14] + nom_x[15];
   out_7384372108169230752[16] = delta_x[15] + nom_x[16];
   out_7384372108169230752[17] = delta_x[16] + nom_x[17];
   out_7384372108169230752[18] = delta_x[17] + nom_x[18];
   out_7384372108169230752[19] = delta_x[18] + nom_x[19];
   out_7384372108169230752[20] = delta_x[19] + nom_x[20];
   out_7384372108169230752[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_7123812327112091225) {
   out_7123812327112091225[0] = -nom_x[0] + true_x[0];
   out_7123812327112091225[1] = -nom_x[1] + true_x[1];
   out_7123812327112091225[2] = -nom_x[2] + true_x[2];
   out_7123812327112091225[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_7123812327112091225[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_7123812327112091225[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_7123812327112091225[6] = -nom_x[7] + true_x[7];
   out_7123812327112091225[7] = -nom_x[8] + true_x[8];
   out_7123812327112091225[8] = -nom_x[9] + true_x[9];
   out_7123812327112091225[9] = -nom_x[10] + true_x[10];
   out_7123812327112091225[10] = -nom_x[11] + true_x[11];
   out_7123812327112091225[11] = -nom_x[12] + true_x[12];
   out_7123812327112091225[12] = -nom_x[13] + true_x[13];
   out_7123812327112091225[13] = -nom_x[14] + true_x[14];
   out_7123812327112091225[14] = -nom_x[15] + true_x[15];
   out_7123812327112091225[15] = -nom_x[16] + true_x[16];
   out_7123812327112091225[16] = -nom_x[17] + true_x[17];
   out_7123812327112091225[17] = -nom_x[18] + true_x[18];
   out_7123812327112091225[18] = -nom_x[19] + true_x[19];
   out_7123812327112091225[19] = -nom_x[20] + true_x[20];
   out_7123812327112091225[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_5900653292609602750) {
   out_5900653292609602750[0] = 1.0;
   out_5900653292609602750[1] = 0;
   out_5900653292609602750[2] = 0;
   out_5900653292609602750[3] = 0;
   out_5900653292609602750[4] = 0;
   out_5900653292609602750[5] = 0;
   out_5900653292609602750[6] = 0;
   out_5900653292609602750[7] = 0;
   out_5900653292609602750[8] = 0;
   out_5900653292609602750[9] = 0;
   out_5900653292609602750[10] = 0;
   out_5900653292609602750[11] = 0;
   out_5900653292609602750[12] = 0;
   out_5900653292609602750[13] = 0;
   out_5900653292609602750[14] = 0;
   out_5900653292609602750[15] = 0;
   out_5900653292609602750[16] = 0;
   out_5900653292609602750[17] = 0;
   out_5900653292609602750[18] = 0;
   out_5900653292609602750[19] = 0;
   out_5900653292609602750[20] = 0;
   out_5900653292609602750[21] = 0;
   out_5900653292609602750[22] = 1.0;
   out_5900653292609602750[23] = 0;
   out_5900653292609602750[24] = 0;
   out_5900653292609602750[25] = 0;
   out_5900653292609602750[26] = 0;
   out_5900653292609602750[27] = 0;
   out_5900653292609602750[28] = 0;
   out_5900653292609602750[29] = 0;
   out_5900653292609602750[30] = 0;
   out_5900653292609602750[31] = 0;
   out_5900653292609602750[32] = 0;
   out_5900653292609602750[33] = 0;
   out_5900653292609602750[34] = 0;
   out_5900653292609602750[35] = 0;
   out_5900653292609602750[36] = 0;
   out_5900653292609602750[37] = 0;
   out_5900653292609602750[38] = 0;
   out_5900653292609602750[39] = 0;
   out_5900653292609602750[40] = 0;
   out_5900653292609602750[41] = 0;
   out_5900653292609602750[42] = 0;
   out_5900653292609602750[43] = 0;
   out_5900653292609602750[44] = 1.0;
   out_5900653292609602750[45] = 0;
   out_5900653292609602750[46] = 0;
   out_5900653292609602750[47] = 0;
   out_5900653292609602750[48] = 0;
   out_5900653292609602750[49] = 0;
   out_5900653292609602750[50] = 0;
   out_5900653292609602750[51] = 0;
   out_5900653292609602750[52] = 0;
   out_5900653292609602750[53] = 0;
   out_5900653292609602750[54] = 0;
   out_5900653292609602750[55] = 0;
   out_5900653292609602750[56] = 0;
   out_5900653292609602750[57] = 0;
   out_5900653292609602750[58] = 0;
   out_5900653292609602750[59] = 0;
   out_5900653292609602750[60] = 0;
   out_5900653292609602750[61] = 0;
   out_5900653292609602750[62] = 0;
   out_5900653292609602750[63] = 0;
   out_5900653292609602750[64] = 0;
   out_5900653292609602750[65] = 0;
   out_5900653292609602750[66] = -0.5*state[4];
   out_5900653292609602750[67] = -0.5*state[5];
   out_5900653292609602750[68] = -0.5*state[6];
   out_5900653292609602750[69] = 0;
   out_5900653292609602750[70] = 0;
   out_5900653292609602750[71] = 0;
   out_5900653292609602750[72] = 0;
   out_5900653292609602750[73] = 0;
   out_5900653292609602750[74] = 0;
   out_5900653292609602750[75] = 0;
   out_5900653292609602750[76] = 0;
   out_5900653292609602750[77] = 0;
   out_5900653292609602750[78] = 0;
   out_5900653292609602750[79] = 0;
   out_5900653292609602750[80] = 0;
   out_5900653292609602750[81] = 0;
   out_5900653292609602750[82] = 0;
   out_5900653292609602750[83] = 0;
   out_5900653292609602750[84] = 0;
   out_5900653292609602750[85] = 0;
   out_5900653292609602750[86] = 0;
   out_5900653292609602750[87] = 0.5*state[3];
   out_5900653292609602750[88] = 0.5*state[6];
   out_5900653292609602750[89] = -0.5*state[5];
   out_5900653292609602750[90] = 0;
   out_5900653292609602750[91] = 0;
   out_5900653292609602750[92] = 0;
   out_5900653292609602750[93] = 0;
   out_5900653292609602750[94] = 0;
   out_5900653292609602750[95] = 0;
   out_5900653292609602750[96] = 0;
   out_5900653292609602750[97] = 0;
   out_5900653292609602750[98] = 0;
   out_5900653292609602750[99] = 0;
   out_5900653292609602750[100] = 0;
   out_5900653292609602750[101] = 0;
   out_5900653292609602750[102] = 0;
   out_5900653292609602750[103] = 0;
   out_5900653292609602750[104] = 0;
   out_5900653292609602750[105] = 0;
   out_5900653292609602750[106] = 0;
   out_5900653292609602750[107] = 0;
   out_5900653292609602750[108] = -0.5*state[6];
   out_5900653292609602750[109] = 0.5*state[3];
   out_5900653292609602750[110] = 0.5*state[4];
   out_5900653292609602750[111] = 0;
   out_5900653292609602750[112] = 0;
   out_5900653292609602750[113] = 0;
   out_5900653292609602750[114] = 0;
   out_5900653292609602750[115] = 0;
   out_5900653292609602750[116] = 0;
   out_5900653292609602750[117] = 0;
   out_5900653292609602750[118] = 0;
   out_5900653292609602750[119] = 0;
   out_5900653292609602750[120] = 0;
   out_5900653292609602750[121] = 0;
   out_5900653292609602750[122] = 0;
   out_5900653292609602750[123] = 0;
   out_5900653292609602750[124] = 0;
   out_5900653292609602750[125] = 0;
   out_5900653292609602750[126] = 0;
   out_5900653292609602750[127] = 0;
   out_5900653292609602750[128] = 0;
   out_5900653292609602750[129] = 0.5*state[5];
   out_5900653292609602750[130] = -0.5*state[4];
   out_5900653292609602750[131] = 0.5*state[3];
   out_5900653292609602750[132] = 0;
   out_5900653292609602750[133] = 0;
   out_5900653292609602750[134] = 0;
   out_5900653292609602750[135] = 0;
   out_5900653292609602750[136] = 0;
   out_5900653292609602750[137] = 0;
   out_5900653292609602750[138] = 0;
   out_5900653292609602750[139] = 0;
   out_5900653292609602750[140] = 0;
   out_5900653292609602750[141] = 0;
   out_5900653292609602750[142] = 0;
   out_5900653292609602750[143] = 0;
   out_5900653292609602750[144] = 0;
   out_5900653292609602750[145] = 0;
   out_5900653292609602750[146] = 0;
   out_5900653292609602750[147] = 0;
   out_5900653292609602750[148] = 0;
   out_5900653292609602750[149] = 0;
   out_5900653292609602750[150] = 0;
   out_5900653292609602750[151] = 0;
   out_5900653292609602750[152] = 0;
   out_5900653292609602750[153] = 1.0;
   out_5900653292609602750[154] = 0;
   out_5900653292609602750[155] = 0;
   out_5900653292609602750[156] = 0;
   out_5900653292609602750[157] = 0;
   out_5900653292609602750[158] = 0;
   out_5900653292609602750[159] = 0;
   out_5900653292609602750[160] = 0;
   out_5900653292609602750[161] = 0;
   out_5900653292609602750[162] = 0;
   out_5900653292609602750[163] = 0;
   out_5900653292609602750[164] = 0;
   out_5900653292609602750[165] = 0;
   out_5900653292609602750[166] = 0;
   out_5900653292609602750[167] = 0;
   out_5900653292609602750[168] = 0;
   out_5900653292609602750[169] = 0;
   out_5900653292609602750[170] = 0;
   out_5900653292609602750[171] = 0;
   out_5900653292609602750[172] = 0;
   out_5900653292609602750[173] = 0;
   out_5900653292609602750[174] = 0;
   out_5900653292609602750[175] = 1.0;
   out_5900653292609602750[176] = 0;
   out_5900653292609602750[177] = 0;
   out_5900653292609602750[178] = 0;
   out_5900653292609602750[179] = 0;
   out_5900653292609602750[180] = 0;
   out_5900653292609602750[181] = 0;
   out_5900653292609602750[182] = 0;
   out_5900653292609602750[183] = 0;
   out_5900653292609602750[184] = 0;
   out_5900653292609602750[185] = 0;
   out_5900653292609602750[186] = 0;
   out_5900653292609602750[187] = 0;
   out_5900653292609602750[188] = 0;
   out_5900653292609602750[189] = 0;
   out_5900653292609602750[190] = 0;
   out_5900653292609602750[191] = 0;
   out_5900653292609602750[192] = 0;
   out_5900653292609602750[193] = 0;
   out_5900653292609602750[194] = 0;
   out_5900653292609602750[195] = 0;
   out_5900653292609602750[196] = 0;
   out_5900653292609602750[197] = 1.0;
   out_5900653292609602750[198] = 0;
   out_5900653292609602750[199] = 0;
   out_5900653292609602750[200] = 0;
   out_5900653292609602750[201] = 0;
   out_5900653292609602750[202] = 0;
   out_5900653292609602750[203] = 0;
   out_5900653292609602750[204] = 0;
   out_5900653292609602750[205] = 0;
   out_5900653292609602750[206] = 0;
   out_5900653292609602750[207] = 0;
   out_5900653292609602750[208] = 0;
   out_5900653292609602750[209] = 0;
   out_5900653292609602750[210] = 0;
   out_5900653292609602750[211] = 0;
   out_5900653292609602750[212] = 0;
   out_5900653292609602750[213] = 0;
   out_5900653292609602750[214] = 0;
   out_5900653292609602750[215] = 0;
   out_5900653292609602750[216] = 0;
   out_5900653292609602750[217] = 0;
   out_5900653292609602750[218] = 0;
   out_5900653292609602750[219] = 1.0;
   out_5900653292609602750[220] = 0;
   out_5900653292609602750[221] = 0;
   out_5900653292609602750[222] = 0;
   out_5900653292609602750[223] = 0;
   out_5900653292609602750[224] = 0;
   out_5900653292609602750[225] = 0;
   out_5900653292609602750[226] = 0;
   out_5900653292609602750[227] = 0;
   out_5900653292609602750[228] = 0;
   out_5900653292609602750[229] = 0;
   out_5900653292609602750[230] = 0;
   out_5900653292609602750[231] = 0;
   out_5900653292609602750[232] = 0;
   out_5900653292609602750[233] = 0;
   out_5900653292609602750[234] = 0;
   out_5900653292609602750[235] = 0;
   out_5900653292609602750[236] = 0;
   out_5900653292609602750[237] = 0;
   out_5900653292609602750[238] = 0;
   out_5900653292609602750[239] = 0;
   out_5900653292609602750[240] = 0;
   out_5900653292609602750[241] = 1.0;
   out_5900653292609602750[242] = 0;
   out_5900653292609602750[243] = 0;
   out_5900653292609602750[244] = 0;
   out_5900653292609602750[245] = 0;
   out_5900653292609602750[246] = 0;
   out_5900653292609602750[247] = 0;
   out_5900653292609602750[248] = 0;
   out_5900653292609602750[249] = 0;
   out_5900653292609602750[250] = 0;
   out_5900653292609602750[251] = 0;
   out_5900653292609602750[252] = 0;
   out_5900653292609602750[253] = 0;
   out_5900653292609602750[254] = 0;
   out_5900653292609602750[255] = 0;
   out_5900653292609602750[256] = 0;
   out_5900653292609602750[257] = 0;
   out_5900653292609602750[258] = 0;
   out_5900653292609602750[259] = 0;
   out_5900653292609602750[260] = 0;
   out_5900653292609602750[261] = 0;
   out_5900653292609602750[262] = 0;
   out_5900653292609602750[263] = 1.0;
   out_5900653292609602750[264] = 0;
   out_5900653292609602750[265] = 0;
   out_5900653292609602750[266] = 0;
   out_5900653292609602750[267] = 0;
   out_5900653292609602750[268] = 0;
   out_5900653292609602750[269] = 0;
   out_5900653292609602750[270] = 0;
   out_5900653292609602750[271] = 0;
   out_5900653292609602750[272] = 0;
   out_5900653292609602750[273] = 0;
   out_5900653292609602750[274] = 0;
   out_5900653292609602750[275] = 0;
   out_5900653292609602750[276] = 0;
   out_5900653292609602750[277] = 0;
   out_5900653292609602750[278] = 0;
   out_5900653292609602750[279] = 0;
   out_5900653292609602750[280] = 0;
   out_5900653292609602750[281] = 0;
   out_5900653292609602750[282] = 0;
   out_5900653292609602750[283] = 0;
   out_5900653292609602750[284] = 0;
   out_5900653292609602750[285] = 1.0;
   out_5900653292609602750[286] = 0;
   out_5900653292609602750[287] = 0;
   out_5900653292609602750[288] = 0;
   out_5900653292609602750[289] = 0;
   out_5900653292609602750[290] = 0;
   out_5900653292609602750[291] = 0;
   out_5900653292609602750[292] = 0;
   out_5900653292609602750[293] = 0;
   out_5900653292609602750[294] = 0;
   out_5900653292609602750[295] = 0;
   out_5900653292609602750[296] = 0;
   out_5900653292609602750[297] = 0;
   out_5900653292609602750[298] = 0;
   out_5900653292609602750[299] = 0;
   out_5900653292609602750[300] = 0;
   out_5900653292609602750[301] = 0;
   out_5900653292609602750[302] = 0;
   out_5900653292609602750[303] = 0;
   out_5900653292609602750[304] = 0;
   out_5900653292609602750[305] = 0;
   out_5900653292609602750[306] = 0;
   out_5900653292609602750[307] = 1.0;
   out_5900653292609602750[308] = 0;
   out_5900653292609602750[309] = 0;
   out_5900653292609602750[310] = 0;
   out_5900653292609602750[311] = 0;
   out_5900653292609602750[312] = 0;
   out_5900653292609602750[313] = 0;
   out_5900653292609602750[314] = 0;
   out_5900653292609602750[315] = 0;
   out_5900653292609602750[316] = 0;
   out_5900653292609602750[317] = 0;
   out_5900653292609602750[318] = 0;
   out_5900653292609602750[319] = 0;
   out_5900653292609602750[320] = 0;
   out_5900653292609602750[321] = 0;
   out_5900653292609602750[322] = 0;
   out_5900653292609602750[323] = 0;
   out_5900653292609602750[324] = 0;
   out_5900653292609602750[325] = 0;
   out_5900653292609602750[326] = 0;
   out_5900653292609602750[327] = 0;
   out_5900653292609602750[328] = 0;
   out_5900653292609602750[329] = 1.0;
   out_5900653292609602750[330] = 0;
   out_5900653292609602750[331] = 0;
   out_5900653292609602750[332] = 0;
   out_5900653292609602750[333] = 0;
   out_5900653292609602750[334] = 0;
   out_5900653292609602750[335] = 0;
   out_5900653292609602750[336] = 0;
   out_5900653292609602750[337] = 0;
   out_5900653292609602750[338] = 0;
   out_5900653292609602750[339] = 0;
   out_5900653292609602750[340] = 0;
   out_5900653292609602750[341] = 0;
   out_5900653292609602750[342] = 0;
   out_5900653292609602750[343] = 0;
   out_5900653292609602750[344] = 0;
   out_5900653292609602750[345] = 0;
   out_5900653292609602750[346] = 0;
   out_5900653292609602750[347] = 0;
   out_5900653292609602750[348] = 0;
   out_5900653292609602750[349] = 0;
   out_5900653292609602750[350] = 0;
   out_5900653292609602750[351] = 1.0;
   out_5900653292609602750[352] = 0;
   out_5900653292609602750[353] = 0;
   out_5900653292609602750[354] = 0;
   out_5900653292609602750[355] = 0;
   out_5900653292609602750[356] = 0;
   out_5900653292609602750[357] = 0;
   out_5900653292609602750[358] = 0;
   out_5900653292609602750[359] = 0;
   out_5900653292609602750[360] = 0;
   out_5900653292609602750[361] = 0;
   out_5900653292609602750[362] = 0;
   out_5900653292609602750[363] = 0;
   out_5900653292609602750[364] = 0;
   out_5900653292609602750[365] = 0;
   out_5900653292609602750[366] = 0;
   out_5900653292609602750[367] = 0;
   out_5900653292609602750[368] = 0;
   out_5900653292609602750[369] = 0;
   out_5900653292609602750[370] = 0;
   out_5900653292609602750[371] = 0;
   out_5900653292609602750[372] = 0;
   out_5900653292609602750[373] = 1.0;
   out_5900653292609602750[374] = 0;
   out_5900653292609602750[375] = 0;
   out_5900653292609602750[376] = 0;
   out_5900653292609602750[377] = 0;
   out_5900653292609602750[378] = 0;
   out_5900653292609602750[379] = 0;
   out_5900653292609602750[380] = 0;
   out_5900653292609602750[381] = 0;
   out_5900653292609602750[382] = 0;
   out_5900653292609602750[383] = 0;
   out_5900653292609602750[384] = 0;
   out_5900653292609602750[385] = 0;
   out_5900653292609602750[386] = 0;
   out_5900653292609602750[387] = 0;
   out_5900653292609602750[388] = 0;
   out_5900653292609602750[389] = 0;
   out_5900653292609602750[390] = 0;
   out_5900653292609602750[391] = 0;
   out_5900653292609602750[392] = 0;
   out_5900653292609602750[393] = 0;
   out_5900653292609602750[394] = 0;
   out_5900653292609602750[395] = 1.0;
   out_5900653292609602750[396] = 0;
   out_5900653292609602750[397] = 0;
   out_5900653292609602750[398] = 0;
   out_5900653292609602750[399] = 0;
   out_5900653292609602750[400] = 0;
   out_5900653292609602750[401] = 0;
   out_5900653292609602750[402] = 0;
   out_5900653292609602750[403] = 0;
   out_5900653292609602750[404] = 0;
   out_5900653292609602750[405] = 0;
   out_5900653292609602750[406] = 0;
   out_5900653292609602750[407] = 0;
   out_5900653292609602750[408] = 0;
   out_5900653292609602750[409] = 0;
   out_5900653292609602750[410] = 0;
   out_5900653292609602750[411] = 0;
   out_5900653292609602750[412] = 0;
   out_5900653292609602750[413] = 0;
   out_5900653292609602750[414] = 0;
   out_5900653292609602750[415] = 0;
   out_5900653292609602750[416] = 0;
   out_5900653292609602750[417] = 1.0;
   out_5900653292609602750[418] = 0;
   out_5900653292609602750[419] = 0;
   out_5900653292609602750[420] = 0;
   out_5900653292609602750[421] = 0;
   out_5900653292609602750[422] = 0;
   out_5900653292609602750[423] = 0;
   out_5900653292609602750[424] = 0;
   out_5900653292609602750[425] = 0;
   out_5900653292609602750[426] = 0;
   out_5900653292609602750[427] = 0;
   out_5900653292609602750[428] = 0;
   out_5900653292609602750[429] = 0;
   out_5900653292609602750[430] = 0;
   out_5900653292609602750[431] = 0;
   out_5900653292609602750[432] = 0;
   out_5900653292609602750[433] = 0;
   out_5900653292609602750[434] = 0;
   out_5900653292609602750[435] = 0;
   out_5900653292609602750[436] = 0;
   out_5900653292609602750[437] = 0;
   out_5900653292609602750[438] = 0;
   out_5900653292609602750[439] = 1.0;
   out_5900653292609602750[440] = 0;
   out_5900653292609602750[441] = 0;
   out_5900653292609602750[442] = 0;
   out_5900653292609602750[443] = 0;
   out_5900653292609602750[444] = 0;
   out_5900653292609602750[445] = 0;
   out_5900653292609602750[446] = 0;
   out_5900653292609602750[447] = 0;
   out_5900653292609602750[448] = 0;
   out_5900653292609602750[449] = 0;
   out_5900653292609602750[450] = 0;
   out_5900653292609602750[451] = 0;
   out_5900653292609602750[452] = 0;
   out_5900653292609602750[453] = 0;
   out_5900653292609602750[454] = 0;
   out_5900653292609602750[455] = 0;
   out_5900653292609602750[456] = 0;
   out_5900653292609602750[457] = 0;
   out_5900653292609602750[458] = 0;
   out_5900653292609602750[459] = 0;
   out_5900653292609602750[460] = 0;
   out_5900653292609602750[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_8270287573456865384) {
   out_8270287573456865384[0] = dt*state[7] + state[0];
   out_8270287573456865384[1] = dt*state[8] + state[1];
   out_8270287573456865384[2] = dt*state[9] + state[2];
   out_8270287573456865384[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_8270287573456865384[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_8270287573456865384[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_8270287573456865384[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_8270287573456865384[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_8270287573456865384[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_8270287573456865384[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_8270287573456865384[10] = state[10];
   out_8270287573456865384[11] = state[11];
   out_8270287573456865384[12] = state[12];
   out_8270287573456865384[13] = state[13];
   out_8270287573456865384[14] = state[14];
   out_8270287573456865384[15] = state[15];
   out_8270287573456865384[16] = state[16];
   out_8270287573456865384[17] = state[17];
   out_8270287573456865384[18] = state[18];
   out_8270287573456865384[19] = state[19];
   out_8270287573456865384[20] = state[20];
   out_8270287573456865384[21] = state[21];
}
void F_fun(double *state, double dt, double *out_468430115656579259) {
   out_468430115656579259[0] = 1;
   out_468430115656579259[1] = 0;
   out_468430115656579259[2] = 0;
   out_468430115656579259[3] = 0;
   out_468430115656579259[4] = 0;
   out_468430115656579259[5] = 0;
   out_468430115656579259[6] = dt;
   out_468430115656579259[7] = 0;
   out_468430115656579259[8] = 0;
   out_468430115656579259[9] = 0;
   out_468430115656579259[10] = 0;
   out_468430115656579259[11] = 0;
   out_468430115656579259[12] = 0;
   out_468430115656579259[13] = 0;
   out_468430115656579259[14] = 0;
   out_468430115656579259[15] = 0;
   out_468430115656579259[16] = 0;
   out_468430115656579259[17] = 0;
   out_468430115656579259[18] = 0;
   out_468430115656579259[19] = 0;
   out_468430115656579259[20] = 0;
   out_468430115656579259[21] = 0;
   out_468430115656579259[22] = 1;
   out_468430115656579259[23] = 0;
   out_468430115656579259[24] = 0;
   out_468430115656579259[25] = 0;
   out_468430115656579259[26] = 0;
   out_468430115656579259[27] = 0;
   out_468430115656579259[28] = dt;
   out_468430115656579259[29] = 0;
   out_468430115656579259[30] = 0;
   out_468430115656579259[31] = 0;
   out_468430115656579259[32] = 0;
   out_468430115656579259[33] = 0;
   out_468430115656579259[34] = 0;
   out_468430115656579259[35] = 0;
   out_468430115656579259[36] = 0;
   out_468430115656579259[37] = 0;
   out_468430115656579259[38] = 0;
   out_468430115656579259[39] = 0;
   out_468430115656579259[40] = 0;
   out_468430115656579259[41] = 0;
   out_468430115656579259[42] = 0;
   out_468430115656579259[43] = 0;
   out_468430115656579259[44] = 1;
   out_468430115656579259[45] = 0;
   out_468430115656579259[46] = 0;
   out_468430115656579259[47] = 0;
   out_468430115656579259[48] = 0;
   out_468430115656579259[49] = 0;
   out_468430115656579259[50] = dt;
   out_468430115656579259[51] = 0;
   out_468430115656579259[52] = 0;
   out_468430115656579259[53] = 0;
   out_468430115656579259[54] = 0;
   out_468430115656579259[55] = 0;
   out_468430115656579259[56] = 0;
   out_468430115656579259[57] = 0;
   out_468430115656579259[58] = 0;
   out_468430115656579259[59] = 0;
   out_468430115656579259[60] = 0;
   out_468430115656579259[61] = 0;
   out_468430115656579259[62] = 0;
   out_468430115656579259[63] = 0;
   out_468430115656579259[64] = 0;
   out_468430115656579259[65] = 0;
   out_468430115656579259[66] = 1;
   out_468430115656579259[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_468430115656579259[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_468430115656579259[69] = 0;
   out_468430115656579259[70] = 0;
   out_468430115656579259[71] = 0;
   out_468430115656579259[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_468430115656579259[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_468430115656579259[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_468430115656579259[75] = 0;
   out_468430115656579259[76] = 0;
   out_468430115656579259[77] = 0;
   out_468430115656579259[78] = 0;
   out_468430115656579259[79] = 0;
   out_468430115656579259[80] = 0;
   out_468430115656579259[81] = 0;
   out_468430115656579259[82] = 0;
   out_468430115656579259[83] = 0;
   out_468430115656579259[84] = 0;
   out_468430115656579259[85] = 0;
   out_468430115656579259[86] = 0;
   out_468430115656579259[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_468430115656579259[88] = 1;
   out_468430115656579259[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_468430115656579259[90] = 0;
   out_468430115656579259[91] = 0;
   out_468430115656579259[92] = 0;
   out_468430115656579259[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_468430115656579259[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_468430115656579259[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_468430115656579259[96] = 0;
   out_468430115656579259[97] = 0;
   out_468430115656579259[98] = 0;
   out_468430115656579259[99] = 0;
   out_468430115656579259[100] = 0;
   out_468430115656579259[101] = 0;
   out_468430115656579259[102] = 0;
   out_468430115656579259[103] = 0;
   out_468430115656579259[104] = 0;
   out_468430115656579259[105] = 0;
   out_468430115656579259[106] = 0;
   out_468430115656579259[107] = 0;
   out_468430115656579259[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_468430115656579259[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_468430115656579259[110] = 1;
   out_468430115656579259[111] = 0;
   out_468430115656579259[112] = 0;
   out_468430115656579259[113] = 0;
   out_468430115656579259[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_468430115656579259[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_468430115656579259[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_468430115656579259[117] = 0;
   out_468430115656579259[118] = 0;
   out_468430115656579259[119] = 0;
   out_468430115656579259[120] = 0;
   out_468430115656579259[121] = 0;
   out_468430115656579259[122] = 0;
   out_468430115656579259[123] = 0;
   out_468430115656579259[124] = 0;
   out_468430115656579259[125] = 0;
   out_468430115656579259[126] = 0;
   out_468430115656579259[127] = 0;
   out_468430115656579259[128] = 0;
   out_468430115656579259[129] = 0;
   out_468430115656579259[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_468430115656579259[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_468430115656579259[132] = 1;
   out_468430115656579259[133] = 0;
   out_468430115656579259[134] = 0;
   out_468430115656579259[135] = 0;
   out_468430115656579259[136] = 0;
   out_468430115656579259[137] = 0;
   out_468430115656579259[138] = 0;
   out_468430115656579259[139] = 0;
   out_468430115656579259[140] = 0;
   out_468430115656579259[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_468430115656579259[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_468430115656579259[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_468430115656579259[144] = 0;
   out_468430115656579259[145] = 0;
   out_468430115656579259[146] = 0;
   out_468430115656579259[147] = 0;
   out_468430115656579259[148] = 0;
   out_468430115656579259[149] = 0;
   out_468430115656579259[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_468430115656579259[151] = 0;
   out_468430115656579259[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_468430115656579259[153] = 0;
   out_468430115656579259[154] = 1;
   out_468430115656579259[155] = 0;
   out_468430115656579259[156] = 0;
   out_468430115656579259[157] = 0;
   out_468430115656579259[158] = 0;
   out_468430115656579259[159] = 0;
   out_468430115656579259[160] = 0;
   out_468430115656579259[161] = 0;
   out_468430115656579259[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_468430115656579259[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_468430115656579259[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_468430115656579259[165] = 0;
   out_468430115656579259[166] = 0;
   out_468430115656579259[167] = 0;
   out_468430115656579259[168] = 0;
   out_468430115656579259[169] = 0;
   out_468430115656579259[170] = 0;
   out_468430115656579259[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_468430115656579259[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_468430115656579259[173] = 0;
   out_468430115656579259[174] = 0;
   out_468430115656579259[175] = 0;
   out_468430115656579259[176] = 1;
   out_468430115656579259[177] = 0;
   out_468430115656579259[178] = 0;
   out_468430115656579259[179] = 0;
   out_468430115656579259[180] = 0;
   out_468430115656579259[181] = 0;
   out_468430115656579259[182] = 0;
   out_468430115656579259[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_468430115656579259[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_468430115656579259[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_468430115656579259[186] = 0;
   out_468430115656579259[187] = 0;
   out_468430115656579259[188] = 0;
   out_468430115656579259[189] = 0;
   out_468430115656579259[190] = 0;
   out_468430115656579259[191] = 0;
   out_468430115656579259[192] = 0;
   out_468430115656579259[193] = 0;
   out_468430115656579259[194] = 0;
   out_468430115656579259[195] = 0;
   out_468430115656579259[196] = 0;
   out_468430115656579259[197] = 0;
   out_468430115656579259[198] = 1;
   out_468430115656579259[199] = 0;
   out_468430115656579259[200] = 0;
   out_468430115656579259[201] = 0;
   out_468430115656579259[202] = 0;
   out_468430115656579259[203] = 0;
   out_468430115656579259[204] = 0;
   out_468430115656579259[205] = 0;
   out_468430115656579259[206] = 0;
   out_468430115656579259[207] = 0;
   out_468430115656579259[208] = 0;
   out_468430115656579259[209] = 0;
   out_468430115656579259[210] = 0;
   out_468430115656579259[211] = 0;
   out_468430115656579259[212] = 0;
   out_468430115656579259[213] = 0;
   out_468430115656579259[214] = 0;
   out_468430115656579259[215] = 0;
   out_468430115656579259[216] = 0;
   out_468430115656579259[217] = 0;
   out_468430115656579259[218] = 0;
   out_468430115656579259[219] = 0;
   out_468430115656579259[220] = 1;
   out_468430115656579259[221] = 0;
   out_468430115656579259[222] = 0;
   out_468430115656579259[223] = 0;
   out_468430115656579259[224] = 0;
   out_468430115656579259[225] = 0;
   out_468430115656579259[226] = 0;
   out_468430115656579259[227] = 0;
   out_468430115656579259[228] = 0;
   out_468430115656579259[229] = 0;
   out_468430115656579259[230] = 0;
   out_468430115656579259[231] = 0;
   out_468430115656579259[232] = 0;
   out_468430115656579259[233] = 0;
   out_468430115656579259[234] = 0;
   out_468430115656579259[235] = 0;
   out_468430115656579259[236] = 0;
   out_468430115656579259[237] = 0;
   out_468430115656579259[238] = 0;
   out_468430115656579259[239] = 0;
   out_468430115656579259[240] = 0;
   out_468430115656579259[241] = 0;
   out_468430115656579259[242] = 1;
   out_468430115656579259[243] = 0;
   out_468430115656579259[244] = 0;
   out_468430115656579259[245] = 0;
   out_468430115656579259[246] = 0;
   out_468430115656579259[247] = 0;
   out_468430115656579259[248] = 0;
   out_468430115656579259[249] = 0;
   out_468430115656579259[250] = 0;
   out_468430115656579259[251] = 0;
   out_468430115656579259[252] = 0;
   out_468430115656579259[253] = 0;
   out_468430115656579259[254] = 0;
   out_468430115656579259[255] = 0;
   out_468430115656579259[256] = 0;
   out_468430115656579259[257] = 0;
   out_468430115656579259[258] = 0;
   out_468430115656579259[259] = 0;
   out_468430115656579259[260] = 0;
   out_468430115656579259[261] = 0;
   out_468430115656579259[262] = 0;
   out_468430115656579259[263] = 0;
   out_468430115656579259[264] = 1;
   out_468430115656579259[265] = 0;
   out_468430115656579259[266] = 0;
   out_468430115656579259[267] = 0;
   out_468430115656579259[268] = 0;
   out_468430115656579259[269] = 0;
   out_468430115656579259[270] = 0;
   out_468430115656579259[271] = 0;
   out_468430115656579259[272] = 0;
   out_468430115656579259[273] = 0;
   out_468430115656579259[274] = 0;
   out_468430115656579259[275] = 0;
   out_468430115656579259[276] = 0;
   out_468430115656579259[277] = 0;
   out_468430115656579259[278] = 0;
   out_468430115656579259[279] = 0;
   out_468430115656579259[280] = 0;
   out_468430115656579259[281] = 0;
   out_468430115656579259[282] = 0;
   out_468430115656579259[283] = 0;
   out_468430115656579259[284] = 0;
   out_468430115656579259[285] = 0;
   out_468430115656579259[286] = 1;
   out_468430115656579259[287] = 0;
   out_468430115656579259[288] = 0;
   out_468430115656579259[289] = 0;
   out_468430115656579259[290] = 0;
   out_468430115656579259[291] = 0;
   out_468430115656579259[292] = 0;
   out_468430115656579259[293] = 0;
   out_468430115656579259[294] = 0;
   out_468430115656579259[295] = 0;
   out_468430115656579259[296] = 0;
   out_468430115656579259[297] = 0;
   out_468430115656579259[298] = 0;
   out_468430115656579259[299] = 0;
   out_468430115656579259[300] = 0;
   out_468430115656579259[301] = 0;
   out_468430115656579259[302] = 0;
   out_468430115656579259[303] = 0;
   out_468430115656579259[304] = 0;
   out_468430115656579259[305] = 0;
   out_468430115656579259[306] = 0;
   out_468430115656579259[307] = 0;
   out_468430115656579259[308] = 1;
   out_468430115656579259[309] = 0;
   out_468430115656579259[310] = 0;
   out_468430115656579259[311] = 0;
   out_468430115656579259[312] = 0;
   out_468430115656579259[313] = 0;
   out_468430115656579259[314] = 0;
   out_468430115656579259[315] = 0;
   out_468430115656579259[316] = 0;
   out_468430115656579259[317] = 0;
   out_468430115656579259[318] = 0;
   out_468430115656579259[319] = 0;
   out_468430115656579259[320] = 0;
   out_468430115656579259[321] = 0;
   out_468430115656579259[322] = 0;
   out_468430115656579259[323] = 0;
   out_468430115656579259[324] = 0;
   out_468430115656579259[325] = 0;
   out_468430115656579259[326] = 0;
   out_468430115656579259[327] = 0;
   out_468430115656579259[328] = 0;
   out_468430115656579259[329] = 0;
   out_468430115656579259[330] = 1;
   out_468430115656579259[331] = 0;
   out_468430115656579259[332] = 0;
   out_468430115656579259[333] = 0;
   out_468430115656579259[334] = 0;
   out_468430115656579259[335] = 0;
   out_468430115656579259[336] = 0;
   out_468430115656579259[337] = 0;
   out_468430115656579259[338] = 0;
   out_468430115656579259[339] = 0;
   out_468430115656579259[340] = 0;
   out_468430115656579259[341] = 0;
   out_468430115656579259[342] = 0;
   out_468430115656579259[343] = 0;
   out_468430115656579259[344] = 0;
   out_468430115656579259[345] = 0;
   out_468430115656579259[346] = 0;
   out_468430115656579259[347] = 0;
   out_468430115656579259[348] = 0;
   out_468430115656579259[349] = 0;
   out_468430115656579259[350] = 0;
   out_468430115656579259[351] = 0;
   out_468430115656579259[352] = 1;
   out_468430115656579259[353] = 0;
   out_468430115656579259[354] = 0;
   out_468430115656579259[355] = 0;
   out_468430115656579259[356] = 0;
   out_468430115656579259[357] = 0;
   out_468430115656579259[358] = 0;
   out_468430115656579259[359] = 0;
   out_468430115656579259[360] = 0;
   out_468430115656579259[361] = 0;
   out_468430115656579259[362] = 0;
   out_468430115656579259[363] = 0;
   out_468430115656579259[364] = 0;
   out_468430115656579259[365] = 0;
   out_468430115656579259[366] = 0;
   out_468430115656579259[367] = 0;
   out_468430115656579259[368] = 0;
   out_468430115656579259[369] = 0;
   out_468430115656579259[370] = 0;
   out_468430115656579259[371] = 0;
   out_468430115656579259[372] = 0;
   out_468430115656579259[373] = 0;
   out_468430115656579259[374] = 1;
   out_468430115656579259[375] = 0;
   out_468430115656579259[376] = 0;
   out_468430115656579259[377] = 0;
   out_468430115656579259[378] = 0;
   out_468430115656579259[379] = 0;
   out_468430115656579259[380] = 0;
   out_468430115656579259[381] = 0;
   out_468430115656579259[382] = 0;
   out_468430115656579259[383] = 0;
   out_468430115656579259[384] = 0;
   out_468430115656579259[385] = 0;
   out_468430115656579259[386] = 0;
   out_468430115656579259[387] = 0;
   out_468430115656579259[388] = 0;
   out_468430115656579259[389] = 0;
   out_468430115656579259[390] = 0;
   out_468430115656579259[391] = 0;
   out_468430115656579259[392] = 0;
   out_468430115656579259[393] = 0;
   out_468430115656579259[394] = 0;
   out_468430115656579259[395] = 0;
   out_468430115656579259[396] = 1;
   out_468430115656579259[397] = 0;
   out_468430115656579259[398] = 0;
   out_468430115656579259[399] = 0;
   out_468430115656579259[400] = 0;
   out_468430115656579259[401] = 0;
   out_468430115656579259[402] = 0;
   out_468430115656579259[403] = 0;
   out_468430115656579259[404] = 0;
   out_468430115656579259[405] = 0;
   out_468430115656579259[406] = 0;
   out_468430115656579259[407] = 0;
   out_468430115656579259[408] = 0;
   out_468430115656579259[409] = 0;
   out_468430115656579259[410] = 0;
   out_468430115656579259[411] = 0;
   out_468430115656579259[412] = 0;
   out_468430115656579259[413] = 0;
   out_468430115656579259[414] = 0;
   out_468430115656579259[415] = 0;
   out_468430115656579259[416] = 0;
   out_468430115656579259[417] = 0;
   out_468430115656579259[418] = 1;
   out_468430115656579259[419] = 0;
   out_468430115656579259[420] = 0;
   out_468430115656579259[421] = 0;
   out_468430115656579259[422] = 0;
   out_468430115656579259[423] = 0;
   out_468430115656579259[424] = 0;
   out_468430115656579259[425] = 0;
   out_468430115656579259[426] = 0;
   out_468430115656579259[427] = 0;
   out_468430115656579259[428] = 0;
   out_468430115656579259[429] = 0;
   out_468430115656579259[430] = 0;
   out_468430115656579259[431] = 0;
   out_468430115656579259[432] = 0;
   out_468430115656579259[433] = 0;
   out_468430115656579259[434] = 0;
   out_468430115656579259[435] = 0;
   out_468430115656579259[436] = 0;
   out_468430115656579259[437] = 0;
   out_468430115656579259[438] = 0;
   out_468430115656579259[439] = 0;
   out_468430115656579259[440] = 1;
}
void h_4(double *state, double *unused, double *out_5343601880999944077) {
   out_5343601880999944077[0] = state[10] + state[13];
   out_5343601880999944077[1] = state[11] + state[14];
   out_5343601880999944077[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_8690355848183064223) {
   out_8690355848183064223[0] = 0;
   out_8690355848183064223[1] = 0;
   out_8690355848183064223[2] = 0;
   out_8690355848183064223[3] = 0;
   out_8690355848183064223[4] = 0;
   out_8690355848183064223[5] = 0;
   out_8690355848183064223[6] = 0;
   out_8690355848183064223[7] = 0;
   out_8690355848183064223[8] = 0;
   out_8690355848183064223[9] = 0;
   out_8690355848183064223[10] = 1;
   out_8690355848183064223[11] = 0;
   out_8690355848183064223[12] = 0;
   out_8690355848183064223[13] = 1;
   out_8690355848183064223[14] = 0;
   out_8690355848183064223[15] = 0;
   out_8690355848183064223[16] = 0;
   out_8690355848183064223[17] = 0;
   out_8690355848183064223[18] = 0;
   out_8690355848183064223[19] = 0;
   out_8690355848183064223[20] = 0;
   out_8690355848183064223[21] = 0;
   out_8690355848183064223[22] = 0;
   out_8690355848183064223[23] = 0;
   out_8690355848183064223[24] = 0;
   out_8690355848183064223[25] = 0;
   out_8690355848183064223[26] = 0;
   out_8690355848183064223[27] = 0;
   out_8690355848183064223[28] = 0;
   out_8690355848183064223[29] = 0;
   out_8690355848183064223[30] = 0;
   out_8690355848183064223[31] = 0;
   out_8690355848183064223[32] = 0;
   out_8690355848183064223[33] = 1;
   out_8690355848183064223[34] = 0;
   out_8690355848183064223[35] = 0;
   out_8690355848183064223[36] = 1;
   out_8690355848183064223[37] = 0;
   out_8690355848183064223[38] = 0;
   out_8690355848183064223[39] = 0;
   out_8690355848183064223[40] = 0;
   out_8690355848183064223[41] = 0;
   out_8690355848183064223[42] = 0;
   out_8690355848183064223[43] = 0;
   out_8690355848183064223[44] = 0;
   out_8690355848183064223[45] = 0;
   out_8690355848183064223[46] = 0;
   out_8690355848183064223[47] = 0;
   out_8690355848183064223[48] = 0;
   out_8690355848183064223[49] = 0;
   out_8690355848183064223[50] = 0;
   out_8690355848183064223[51] = 0;
   out_8690355848183064223[52] = 0;
   out_8690355848183064223[53] = 0;
   out_8690355848183064223[54] = 0;
   out_8690355848183064223[55] = 0;
   out_8690355848183064223[56] = 1;
   out_8690355848183064223[57] = 0;
   out_8690355848183064223[58] = 0;
   out_8690355848183064223[59] = 1;
   out_8690355848183064223[60] = 0;
   out_8690355848183064223[61] = 0;
   out_8690355848183064223[62] = 0;
   out_8690355848183064223[63] = 0;
   out_8690355848183064223[64] = 0;
   out_8690355848183064223[65] = 0;
}
void h_9(double *state, double *unused, double *out_8563674156499137782) {
   out_8563674156499137782[0] = state[10];
   out_8563674156499137782[1] = state[11];
   out_8563674156499137782[2] = state[12];
}
void H_9(double *state, double *unused, double *out_2469169290262039923) {
   out_2469169290262039923[0] = 0;
   out_2469169290262039923[1] = 0;
   out_2469169290262039923[2] = 0;
   out_2469169290262039923[3] = 0;
   out_2469169290262039923[4] = 0;
   out_2469169290262039923[5] = 0;
   out_2469169290262039923[6] = 0;
   out_2469169290262039923[7] = 0;
   out_2469169290262039923[8] = 0;
   out_2469169290262039923[9] = 0;
   out_2469169290262039923[10] = 1;
   out_2469169290262039923[11] = 0;
   out_2469169290262039923[12] = 0;
   out_2469169290262039923[13] = 0;
   out_2469169290262039923[14] = 0;
   out_2469169290262039923[15] = 0;
   out_2469169290262039923[16] = 0;
   out_2469169290262039923[17] = 0;
   out_2469169290262039923[18] = 0;
   out_2469169290262039923[19] = 0;
   out_2469169290262039923[20] = 0;
   out_2469169290262039923[21] = 0;
   out_2469169290262039923[22] = 0;
   out_2469169290262039923[23] = 0;
   out_2469169290262039923[24] = 0;
   out_2469169290262039923[25] = 0;
   out_2469169290262039923[26] = 0;
   out_2469169290262039923[27] = 0;
   out_2469169290262039923[28] = 0;
   out_2469169290262039923[29] = 0;
   out_2469169290262039923[30] = 0;
   out_2469169290262039923[31] = 0;
   out_2469169290262039923[32] = 0;
   out_2469169290262039923[33] = 1;
   out_2469169290262039923[34] = 0;
   out_2469169290262039923[35] = 0;
   out_2469169290262039923[36] = 0;
   out_2469169290262039923[37] = 0;
   out_2469169290262039923[38] = 0;
   out_2469169290262039923[39] = 0;
   out_2469169290262039923[40] = 0;
   out_2469169290262039923[41] = 0;
   out_2469169290262039923[42] = 0;
   out_2469169290262039923[43] = 0;
   out_2469169290262039923[44] = 0;
   out_2469169290262039923[45] = 0;
   out_2469169290262039923[46] = 0;
   out_2469169290262039923[47] = 0;
   out_2469169290262039923[48] = 0;
   out_2469169290262039923[49] = 0;
   out_2469169290262039923[50] = 0;
   out_2469169290262039923[51] = 0;
   out_2469169290262039923[52] = 0;
   out_2469169290262039923[53] = 0;
   out_2469169290262039923[54] = 0;
   out_2469169290262039923[55] = 0;
   out_2469169290262039923[56] = 1;
   out_2469169290262039923[57] = 0;
   out_2469169290262039923[58] = 0;
   out_2469169290262039923[59] = 0;
   out_2469169290262039923[60] = 0;
   out_2469169290262039923[61] = 0;
   out_2469169290262039923[62] = 0;
   out_2469169290262039923[63] = 0;
   out_2469169290262039923[64] = 0;
   out_2469169290262039923[65] = 0;
}
void h_10(double *state, double *unused, double *out_1058046278782088996) {
   out_1058046278782088996[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_1058046278782088996[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_1058046278782088996[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_4703589435547461641) {
   out_4703589435547461641[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4703589435547461641[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_4703589435547461641[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_4703589435547461641[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_4703589435547461641[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_4703589435547461641[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_4703589435547461641[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_4703589435547461641[7] = 0;
   out_4703589435547461641[8] = 0;
   out_4703589435547461641[9] = 0;
   out_4703589435547461641[10] = 0;
   out_4703589435547461641[11] = 0;
   out_4703589435547461641[12] = 0;
   out_4703589435547461641[13] = 0;
   out_4703589435547461641[14] = 0;
   out_4703589435547461641[15] = 0;
   out_4703589435547461641[16] = 1;
   out_4703589435547461641[17] = 0;
   out_4703589435547461641[18] = 0;
   out_4703589435547461641[19] = 1;
   out_4703589435547461641[20] = 0;
   out_4703589435547461641[21] = 0;
   out_4703589435547461641[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_4703589435547461641[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4703589435547461641[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_4703589435547461641[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_4703589435547461641[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_4703589435547461641[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_4703589435547461641[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_4703589435547461641[29] = 0;
   out_4703589435547461641[30] = 0;
   out_4703589435547461641[31] = 0;
   out_4703589435547461641[32] = 0;
   out_4703589435547461641[33] = 0;
   out_4703589435547461641[34] = 0;
   out_4703589435547461641[35] = 0;
   out_4703589435547461641[36] = 0;
   out_4703589435547461641[37] = 0;
   out_4703589435547461641[38] = 0;
   out_4703589435547461641[39] = 1;
   out_4703589435547461641[40] = 0;
   out_4703589435547461641[41] = 0;
   out_4703589435547461641[42] = 1;
   out_4703589435547461641[43] = 0;
   out_4703589435547461641[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_4703589435547461641[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_4703589435547461641[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4703589435547461641[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_4703589435547461641[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_4703589435547461641[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_4703589435547461641[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_4703589435547461641[51] = 0;
   out_4703589435547461641[52] = 0;
   out_4703589435547461641[53] = 0;
   out_4703589435547461641[54] = 0;
   out_4703589435547461641[55] = 0;
   out_4703589435547461641[56] = 0;
   out_4703589435547461641[57] = 0;
   out_4703589435547461641[58] = 0;
   out_4703589435547461641[59] = 0;
   out_4703589435547461641[60] = 0;
   out_4703589435547461641[61] = 0;
   out_4703589435547461641[62] = 1;
   out_4703589435547461641[63] = 0;
   out_4703589435547461641[64] = 0;
   out_4703589435547461641[65] = 1;
}
void h_12(double *state, double *unused, double *out_7885917772179439573) {
   out_7885917772179439573[0] = state[0];
   out_7885917772179439573[1] = state[1];
   out_7885917772179439573[2] = state[2];
}
void H_12(double *state, double *unused, double *out_2309097471140331227) {
   out_2309097471140331227[0] = 1;
   out_2309097471140331227[1] = 0;
   out_2309097471140331227[2] = 0;
   out_2309097471140331227[3] = 0;
   out_2309097471140331227[4] = 0;
   out_2309097471140331227[5] = 0;
   out_2309097471140331227[6] = 0;
   out_2309097471140331227[7] = 0;
   out_2309097471140331227[8] = 0;
   out_2309097471140331227[9] = 0;
   out_2309097471140331227[10] = 0;
   out_2309097471140331227[11] = 0;
   out_2309097471140331227[12] = 0;
   out_2309097471140331227[13] = 0;
   out_2309097471140331227[14] = 0;
   out_2309097471140331227[15] = 0;
   out_2309097471140331227[16] = 0;
   out_2309097471140331227[17] = 0;
   out_2309097471140331227[18] = 0;
   out_2309097471140331227[19] = 0;
   out_2309097471140331227[20] = 0;
   out_2309097471140331227[21] = 0;
   out_2309097471140331227[22] = 0;
   out_2309097471140331227[23] = 1;
   out_2309097471140331227[24] = 0;
   out_2309097471140331227[25] = 0;
   out_2309097471140331227[26] = 0;
   out_2309097471140331227[27] = 0;
   out_2309097471140331227[28] = 0;
   out_2309097471140331227[29] = 0;
   out_2309097471140331227[30] = 0;
   out_2309097471140331227[31] = 0;
   out_2309097471140331227[32] = 0;
   out_2309097471140331227[33] = 0;
   out_2309097471140331227[34] = 0;
   out_2309097471140331227[35] = 0;
   out_2309097471140331227[36] = 0;
   out_2309097471140331227[37] = 0;
   out_2309097471140331227[38] = 0;
   out_2309097471140331227[39] = 0;
   out_2309097471140331227[40] = 0;
   out_2309097471140331227[41] = 0;
   out_2309097471140331227[42] = 0;
   out_2309097471140331227[43] = 0;
   out_2309097471140331227[44] = 0;
   out_2309097471140331227[45] = 0;
   out_2309097471140331227[46] = 1;
   out_2309097471140331227[47] = 0;
   out_2309097471140331227[48] = 0;
   out_2309097471140331227[49] = 0;
   out_2309097471140331227[50] = 0;
   out_2309097471140331227[51] = 0;
   out_2309097471140331227[52] = 0;
   out_2309097471140331227[53] = 0;
   out_2309097471140331227[54] = 0;
   out_2309097471140331227[55] = 0;
   out_2309097471140331227[56] = 0;
   out_2309097471140331227[57] = 0;
   out_2309097471140331227[58] = 0;
   out_2309097471140331227[59] = 0;
   out_2309097471140331227[60] = 0;
   out_2309097471140331227[61] = 0;
   out_2309097471140331227[62] = 0;
   out_2309097471140331227[63] = 0;
   out_2309097471140331227[64] = 0;
   out_2309097471140331227[65] = 0;
}
void h_35(double *state, double *unused, double *out_7952497595820258194) {
   out_7952497595820258194[0] = state[7];
   out_7952497595820258194[1] = state[8];
   out_7952497595820258194[2] = state[9];
}
void H_35(double *state, double *unused, double *out_656303120480976808) {
   out_656303120480976808[0] = 0;
   out_656303120480976808[1] = 0;
   out_656303120480976808[2] = 0;
   out_656303120480976808[3] = 0;
   out_656303120480976808[4] = 0;
   out_656303120480976808[5] = 0;
   out_656303120480976808[6] = 0;
   out_656303120480976808[7] = 1;
   out_656303120480976808[8] = 0;
   out_656303120480976808[9] = 0;
   out_656303120480976808[10] = 0;
   out_656303120480976808[11] = 0;
   out_656303120480976808[12] = 0;
   out_656303120480976808[13] = 0;
   out_656303120480976808[14] = 0;
   out_656303120480976808[15] = 0;
   out_656303120480976808[16] = 0;
   out_656303120480976808[17] = 0;
   out_656303120480976808[18] = 0;
   out_656303120480976808[19] = 0;
   out_656303120480976808[20] = 0;
   out_656303120480976808[21] = 0;
   out_656303120480976808[22] = 0;
   out_656303120480976808[23] = 0;
   out_656303120480976808[24] = 0;
   out_656303120480976808[25] = 0;
   out_656303120480976808[26] = 0;
   out_656303120480976808[27] = 0;
   out_656303120480976808[28] = 0;
   out_656303120480976808[29] = 0;
   out_656303120480976808[30] = 1;
   out_656303120480976808[31] = 0;
   out_656303120480976808[32] = 0;
   out_656303120480976808[33] = 0;
   out_656303120480976808[34] = 0;
   out_656303120480976808[35] = 0;
   out_656303120480976808[36] = 0;
   out_656303120480976808[37] = 0;
   out_656303120480976808[38] = 0;
   out_656303120480976808[39] = 0;
   out_656303120480976808[40] = 0;
   out_656303120480976808[41] = 0;
   out_656303120480976808[42] = 0;
   out_656303120480976808[43] = 0;
   out_656303120480976808[44] = 0;
   out_656303120480976808[45] = 0;
   out_656303120480976808[46] = 0;
   out_656303120480976808[47] = 0;
   out_656303120480976808[48] = 0;
   out_656303120480976808[49] = 0;
   out_656303120480976808[50] = 0;
   out_656303120480976808[51] = 0;
   out_656303120480976808[52] = 0;
   out_656303120480976808[53] = 1;
   out_656303120480976808[54] = 0;
   out_656303120480976808[55] = 0;
   out_656303120480976808[56] = 0;
   out_656303120480976808[57] = 0;
   out_656303120480976808[58] = 0;
   out_656303120480976808[59] = 0;
   out_656303120480976808[60] = 0;
   out_656303120480976808[61] = 0;
   out_656303120480976808[62] = 0;
   out_656303120480976808[63] = 0;
   out_656303120480976808[64] = 0;
   out_656303120480976808[65] = 0;
}
void h_32(double *state, double *unused, double *out_8117811263559019773) {
   out_8117811263559019773[0] = state[3];
   out_8117811263559019773[1] = state[4];
   out_8117811263559019773[2] = state[5];
   out_8117811263559019773[3] = state[6];
}
void H_32(double *state, double *unused, double *out_4742038808577899908) {
   out_4742038808577899908[0] = 0;
   out_4742038808577899908[1] = 0;
   out_4742038808577899908[2] = 0;
   out_4742038808577899908[3] = 1;
   out_4742038808577899908[4] = 0;
   out_4742038808577899908[5] = 0;
   out_4742038808577899908[6] = 0;
   out_4742038808577899908[7] = 0;
   out_4742038808577899908[8] = 0;
   out_4742038808577899908[9] = 0;
   out_4742038808577899908[10] = 0;
   out_4742038808577899908[11] = 0;
   out_4742038808577899908[12] = 0;
   out_4742038808577899908[13] = 0;
   out_4742038808577899908[14] = 0;
   out_4742038808577899908[15] = 0;
   out_4742038808577899908[16] = 0;
   out_4742038808577899908[17] = 0;
   out_4742038808577899908[18] = 0;
   out_4742038808577899908[19] = 0;
   out_4742038808577899908[20] = 0;
   out_4742038808577899908[21] = 0;
   out_4742038808577899908[22] = 0;
   out_4742038808577899908[23] = 0;
   out_4742038808577899908[24] = 0;
   out_4742038808577899908[25] = 0;
   out_4742038808577899908[26] = 1;
   out_4742038808577899908[27] = 0;
   out_4742038808577899908[28] = 0;
   out_4742038808577899908[29] = 0;
   out_4742038808577899908[30] = 0;
   out_4742038808577899908[31] = 0;
   out_4742038808577899908[32] = 0;
   out_4742038808577899908[33] = 0;
   out_4742038808577899908[34] = 0;
   out_4742038808577899908[35] = 0;
   out_4742038808577899908[36] = 0;
   out_4742038808577899908[37] = 0;
   out_4742038808577899908[38] = 0;
   out_4742038808577899908[39] = 0;
   out_4742038808577899908[40] = 0;
   out_4742038808577899908[41] = 0;
   out_4742038808577899908[42] = 0;
   out_4742038808577899908[43] = 0;
   out_4742038808577899908[44] = 0;
   out_4742038808577899908[45] = 0;
   out_4742038808577899908[46] = 0;
   out_4742038808577899908[47] = 0;
   out_4742038808577899908[48] = 0;
   out_4742038808577899908[49] = 1;
   out_4742038808577899908[50] = 0;
   out_4742038808577899908[51] = 0;
   out_4742038808577899908[52] = 0;
   out_4742038808577899908[53] = 0;
   out_4742038808577899908[54] = 0;
   out_4742038808577899908[55] = 0;
   out_4742038808577899908[56] = 0;
   out_4742038808577899908[57] = 0;
   out_4742038808577899908[58] = 0;
   out_4742038808577899908[59] = 0;
   out_4742038808577899908[60] = 0;
   out_4742038808577899908[61] = 0;
   out_4742038808577899908[62] = 0;
   out_4742038808577899908[63] = 0;
   out_4742038808577899908[64] = 0;
   out_4742038808577899908[65] = 0;
   out_4742038808577899908[66] = 0;
   out_4742038808577899908[67] = 0;
   out_4742038808577899908[68] = 0;
   out_4742038808577899908[69] = 0;
   out_4742038808577899908[70] = 0;
   out_4742038808577899908[71] = 0;
   out_4742038808577899908[72] = 1;
   out_4742038808577899908[73] = 0;
   out_4742038808577899908[74] = 0;
   out_4742038808577899908[75] = 0;
   out_4742038808577899908[76] = 0;
   out_4742038808577899908[77] = 0;
   out_4742038808577899908[78] = 0;
   out_4742038808577899908[79] = 0;
   out_4742038808577899908[80] = 0;
   out_4742038808577899908[81] = 0;
   out_4742038808577899908[82] = 0;
   out_4742038808577899908[83] = 0;
   out_4742038808577899908[84] = 0;
   out_4742038808577899908[85] = 0;
   out_4742038808577899908[86] = 0;
   out_4742038808577899908[87] = 0;
}
void h_13(double *state, double *unused, double *out_3379484723930244350) {
   out_3379484723930244350[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_3379484723930244350[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_3379484723930244350[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_2869722698847849975) {
   out_2869722698847849975[0] = 0;
   out_2869722698847849975[1] = 0;
   out_2869722698847849975[2] = 0;
   out_2869722698847849975[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_2869722698847849975[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2869722698847849975[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_2869722698847849975[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_2869722698847849975[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_2869722698847849975[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_2869722698847849975[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_2869722698847849975[10] = 0;
   out_2869722698847849975[11] = 0;
   out_2869722698847849975[12] = 0;
   out_2869722698847849975[13] = 0;
   out_2869722698847849975[14] = 0;
   out_2869722698847849975[15] = 0;
   out_2869722698847849975[16] = 0;
   out_2869722698847849975[17] = 0;
   out_2869722698847849975[18] = 0;
   out_2869722698847849975[19] = 0;
   out_2869722698847849975[20] = 0;
   out_2869722698847849975[21] = 0;
   out_2869722698847849975[22] = 0;
   out_2869722698847849975[23] = 0;
   out_2869722698847849975[24] = 0;
   out_2869722698847849975[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_2869722698847849975[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_2869722698847849975[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2869722698847849975[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_2869722698847849975[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_2869722698847849975[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_2869722698847849975[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_2869722698847849975[32] = 0;
   out_2869722698847849975[33] = 0;
   out_2869722698847849975[34] = 0;
   out_2869722698847849975[35] = 0;
   out_2869722698847849975[36] = 0;
   out_2869722698847849975[37] = 0;
   out_2869722698847849975[38] = 0;
   out_2869722698847849975[39] = 0;
   out_2869722698847849975[40] = 0;
   out_2869722698847849975[41] = 0;
   out_2869722698847849975[42] = 0;
   out_2869722698847849975[43] = 0;
   out_2869722698847849975[44] = 0;
   out_2869722698847849975[45] = 0;
   out_2869722698847849975[46] = 0;
   out_2869722698847849975[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_2869722698847849975[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_2869722698847849975[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_2869722698847849975[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2869722698847849975[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_2869722698847849975[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_2869722698847849975[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_2869722698847849975[54] = 0;
   out_2869722698847849975[55] = 0;
   out_2869722698847849975[56] = 0;
   out_2869722698847849975[57] = 0;
   out_2869722698847849975[58] = 0;
   out_2869722698847849975[59] = 0;
   out_2869722698847849975[60] = 0;
   out_2869722698847849975[61] = 0;
   out_2869722698847849975[62] = 0;
   out_2869722698847849975[63] = 0;
   out_2869722698847849975[64] = 0;
   out_2869722698847849975[65] = 0;
}
void h_14(double *state, double *unused, double *out_8563674156499137782) {
   out_8563674156499137782[0] = state[10];
   out_8563674156499137782[1] = state[11];
   out_8563674156499137782[2] = state[12];
}
void H_14(double *state, double *unused, double *out_2469169290262039923) {
   out_2469169290262039923[0] = 0;
   out_2469169290262039923[1] = 0;
   out_2469169290262039923[2] = 0;
   out_2469169290262039923[3] = 0;
   out_2469169290262039923[4] = 0;
   out_2469169290262039923[5] = 0;
   out_2469169290262039923[6] = 0;
   out_2469169290262039923[7] = 0;
   out_2469169290262039923[8] = 0;
   out_2469169290262039923[9] = 0;
   out_2469169290262039923[10] = 1;
   out_2469169290262039923[11] = 0;
   out_2469169290262039923[12] = 0;
   out_2469169290262039923[13] = 0;
   out_2469169290262039923[14] = 0;
   out_2469169290262039923[15] = 0;
   out_2469169290262039923[16] = 0;
   out_2469169290262039923[17] = 0;
   out_2469169290262039923[18] = 0;
   out_2469169290262039923[19] = 0;
   out_2469169290262039923[20] = 0;
   out_2469169290262039923[21] = 0;
   out_2469169290262039923[22] = 0;
   out_2469169290262039923[23] = 0;
   out_2469169290262039923[24] = 0;
   out_2469169290262039923[25] = 0;
   out_2469169290262039923[26] = 0;
   out_2469169290262039923[27] = 0;
   out_2469169290262039923[28] = 0;
   out_2469169290262039923[29] = 0;
   out_2469169290262039923[30] = 0;
   out_2469169290262039923[31] = 0;
   out_2469169290262039923[32] = 0;
   out_2469169290262039923[33] = 1;
   out_2469169290262039923[34] = 0;
   out_2469169290262039923[35] = 0;
   out_2469169290262039923[36] = 0;
   out_2469169290262039923[37] = 0;
   out_2469169290262039923[38] = 0;
   out_2469169290262039923[39] = 0;
   out_2469169290262039923[40] = 0;
   out_2469169290262039923[41] = 0;
   out_2469169290262039923[42] = 0;
   out_2469169290262039923[43] = 0;
   out_2469169290262039923[44] = 0;
   out_2469169290262039923[45] = 0;
   out_2469169290262039923[46] = 0;
   out_2469169290262039923[47] = 0;
   out_2469169290262039923[48] = 0;
   out_2469169290262039923[49] = 0;
   out_2469169290262039923[50] = 0;
   out_2469169290262039923[51] = 0;
   out_2469169290262039923[52] = 0;
   out_2469169290262039923[53] = 0;
   out_2469169290262039923[54] = 0;
   out_2469169290262039923[55] = 0;
   out_2469169290262039923[56] = 1;
   out_2469169290262039923[57] = 0;
   out_2469169290262039923[58] = 0;
   out_2469169290262039923[59] = 0;
   out_2469169290262039923[60] = 0;
   out_2469169290262039923[61] = 0;
   out_2469169290262039923[62] = 0;
   out_2469169290262039923[63] = 0;
   out_2469169290262039923[64] = 0;
   out_2469169290262039923[65] = 0;
}
void h_33(double *state, double *unused, double *out_3903239874447069051) {
   out_3903239874447069051[0] = state[16];
   out_3903239874447069051[1] = state[17];
   out_3903239874447069051[2] = state[18];
}
void H_33(double *state, double *unused, double *out_3806860125119834412) {
   out_3806860125119834412[0] = 0;
   out_3806860125119834412[1] = 0;
   out_3806860125119834412[2] = 0;
   out_3806860125119834412[3] = 0;
   out_3806860125119834412[4] = 0;
   out_3806860125119834412[5] = 0;
   out_3806860125119834412[6] = 0;
   out_3806860125119834412[7] = 0;
   out_3806860125119834412[8] = 0;
   out_3806860125119834412[9] = 0;
   out_3806860125119834412[10] = 0;
   out_3806860125119834412[11] = 0;
   out_3806860125119834412[12] = 0;
   out_3806860125119834412[13] = 0;
   out_3806860125119834412[14] = 0;
   out_3806860125119834412[15] = 0;
   out_3806860125119834412[16] = 1;
   out_3806860125119834412[17] = 0;
   out_3806860125119834412[18] = 0;
   out_3806860125119834412[19] = 0;
   out_3806860125119834412[20] = 0;
   out_3806860125119834412[21] = 0;
   out_3806860125119834412[22] = 0;
   out_3806860125119834412[23] = 0;
   out_3806860125119834412[24] = 0;
   out_3806860125119834412[25] = 0;
   out_3806860125119834412[26] = 0;
   out_3806860125119834412[27] = 0;
   out_3806860125119834412[28] = 0;
   out_3806860125119834412[29] = 0;
   out_3806860125119834412[30] = 0;
   out_3806860125119834412[31] = 0;
   out_3806860125119834412[32] = 0;
   out_3806860125119834412[33] = 0;
   out_3806860125119834412[34] = 0;
   out_3806860125119834412[35] = 0;
   out_3806860125119834412[36] = 0;
   out_3806860125119834412[37] = 0;
   out_3806860125119834412[38] = 0;
   out_3806860125119834412[39] = 1;
   out_3806860125119834412[40] = 0;
   out_3806860125119834412[41] = 0;
   out_3806860125119834412[42] = 0;
   out_3806860125119834412[43] = 0;
   out_3806860125119834412[44] = 0;
   out_3806860125119834412[45] = 0;
   out_3806860125119834412[46] = 0;
   out_3806860125119834412[47] = 0;
   out_3806860125119834412[48] = 0;
   out_3806860125119834412[49] = 0;
   out_3806860125119834412[50] = 0;
   out_3806860125119834412[51] = 0;
   out_3806860125119834412[52] = 0;
   out_3806860125119834412[53] = 0;
   out_3806860125119834412[54] = 0;
   out_3806860125119834412[55] = 0;
   out_3806860125119834412[56] = 0;
   out_3806860125119834412[57] = 0;
   out_3806860125119834412[58] = 0;
   out_3806860125119834412[59] = 0;
   out_3806860125119834412[60] = 0;
   out_3806860125119834412[61] = 0;
   out_3806860125119834412[62] = 1;
   out_3806860125119834412[63] = 0;
   out_3806860125119834412[64] = 0;
   out_3806860125119834412[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_7420092385227711648) {
  H(in_vec, out_7420092385227711648);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_7384372108169230752) {
  err_fun(nom_x, delta_x, out_7384372108169230752);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_7123812327112091225) {
  inv_err_fun(nom_x, true_x, out_7123812327112091225);
}
void live_H_mod_fun(double *state, double *out_5900653292609602750) {
  H_mod_fun(state, out_5900653292609602750);
}
void live_f_fun(double *state, double dt, double *out_8270287573456865384) {
  f_fun(state,  dt, out_8270287573456865384);
}
void live_F_fun(double *state, double dt, double *out_468430115656579259) {
  F_fun(state,  dt, out_468430115656579259);
}
void live_h_4(double *state, double *unused, double *out_5343601880999944077) {
  h_4(state, unused, out_5343601880999944077);
}
void live_H_4(double *state, double *unused, double *out_8690355848183064223) {
  H_4(state, unused, out_8690355848183064223);
}
void live_h_9(double *state, double *unused, double *out_8563674156499137782) {
  h_9(state, unused, out_8563674156499137782);
}
void live_H_9(double *state, double *unused, double *out_2469169290262039923) {
  H_9(state, unused, out_2469169290262039923);
}
void live_h_10(double *state, double *unused, double *out_1058046278782088996) {
  h_10(state, unused, out_1058046278782088996);
}
void live_H_10(double *state, double *unused, double *out_4703589435547461641) {
  H_10(state, unused, out_4703589435547461641);
}
void live_h_12(double *state, double *unused, double *out_7885917772179439573) {
  h_12(state, unused, out_7885917772179439573);
}
void live_H_12(double *state, double *unused, double *out_2309097471140331227) {
  H_12(state, unused, out_2309097471140331227);
}
void live_h_35(double *state, double *unused, double *out_7952497595820258194) {
  h_35(state, unused, out_7952497595820258194);
}
void live_H_35(double *state, double *unused, double *out_656303120480976808) {
  H_35(state, unused, out_656303120480976808);
}
void live_h_32(double *state, double *unused, double *out_8117811263559019773) {
  h_32(state, unused, out_8117811263559019773);
}
void live_H_32(double *state, double *unused, double *out_4742038808577899908) {
  H_32(state, unused, out_4742038808577899908);
}
void live_h_13(double *state, double *unused, double *out_3379484723930244350) {
  h_13(state, unused, out_3379484723930244350);
}
void live_H_13(double *state, double *unused, double *out_2869722698847849975) {
  H_13(state, unused, out_2869722698847849975);
}
void live_h_14(double *state, double *unused, double *out_8563674156499137782) {
  h_14(state, unused, out_8563674156499137782);
}
void live_H_14(double *state, double *unused, double *out_2469169290262039923) {
  H_14(state, unused, out_2469169290262039923);
}
void live_h_33(double *state, double *unused, double *out_3903239874447069051) {
  h_33(state, unused, out_3903239874447069051);
}
void live_H_33(double *state, double *unused, double *out_3806860125119834412) {
  H_33(state, unused, out_3806860125119834412);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
